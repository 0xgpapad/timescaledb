\set ON_ERROR_STOP 1
{% set databases = ['Test1', 'test2'] %}
{% import 'admin.sql.j2' as admin %}

{{admin.create_database('meta')}}
{% for db in databases -%}
{{admin.create_database(db)}}
{%- endfor %}

{{admin.load_scripts('meta')}}
{{admin.load_scripts_meta()}}
{% for db in databases -%}
{{admin.load_scripts(db)}}
{{admin.load_scripts_main(db)}}
{{admin.load_scripts_main_kafka(db)}}
{%- endfor %}

{% for db in databases -%}
{{admin.init_fdw(db, databases)}}
{%- endfor %}

\set ECHO ALL
\c meta
{% for db in databases -%}
SELECT add_node('{{ db }}' :: NAME, '{{ db }}' :: NAME);
{%- endfor %}

\c Test1
\dt public.*
\det+ public.*


SELECT * FROM kafka_get_start_and_next_offset('topic', 0::SMALLINT, 0);
SELECT * FROM kafka_get_start_and_next_offset('topic', 0::SMALLINT, 0);
SELECT * FROM kafka_set_next_offset('topic', 0::SMALLINT, 0, 100);
SELECT * FROM kafka_get_start_and_next_offset('topic', 0::SMALLINT, 0);
SELECT * FROM kafka_get_start_and_next_offset('topic', 1::SMALLINT, 0);
\c test2
SELECT * FROM kafka_get_start_and_next_offset('topic', 0::SMALLINT, 0);
\set ON_ERROR_STOP 0
SELECT * FROM kafka_set_next_offset('topic', 0::SMALLINT, 0, 101);
\set ON_ERROR_STOP 1
SELECT * FROM kafka_set_next_offset('topic', 0::SMALLINT, 100, 101);
\c Test1
SELECT * FROM kafka_get_start_and_next_offset('topic', 0::SMALLINT, 0);
SELECT * FROM kafka_offset_local;





