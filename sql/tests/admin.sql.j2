{% macro create_database(db) %}
DROP DATABASE IF EXISTS "{{db}}";
CREATE DATABASE "{{db}}";
{%- endmacro %}

{% macro load_scripts(db) %}
\c {{db}}
\ir ../common/extensions.sql
\ir ../common/types.sql
\ir ../common/tables.sql
{%- endmacro %}


{% macro load_scripts_main(db) %}
\c {{db}}
\ir ../main/namespace_triggers.sql
\ir ../main/field_triggers.sql
\ir ../main/partitioning.sql
\ir ../main/schema_info.sql
\ir ../main/names.sql
\ir ../main/tables.sql
\ir ../main/data_table_triggers.sql
\ir ../main/partition_table_triggers.sql
\ir ../main/data_table_constructors.sql
{%- endmacro %}

{% macro load_scripts_main_kafka(db) %}
\c {{db}}
\ir ../main/kafka_offset_table.sql
\ir ../main/kafka_offset_node_trigger.sql
\ir ../main/kafka_offset_functions.sql
{%- endmacro %}


{% macro load_scripts_meta() %}
\c meta
\ir ../meta/names.sql
\ir ../meta/cluster.sql
\ir ../meta/node_triggers.sql
\ir ../meta/namespace_triggers.sql
\ir ../meta/field_triggers.sql
{%- endmacro %}

{% macro init_fdw(db, databases) %}
\c meta
CREATE SERVER "{{ db }}" FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host 'localhost', dbname '{{ db }}');
CREATE USER MAPPING FOR CURRENT_USER SERVER "{{ db }}" OPTIONS ( USER 'postgres');

\c {{db}}
{% for db_other in databases -%}
{% if db_other != db %}
CREATE SERVER "{{ db_other }}" FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host 'localhost', dbname '{{ db_other }}');
CREATE USER MAPPING FOR CURRENT_USER SERVER "{{ db_other }}" OPTIONS ( USER 'postgres');
{% endif %}
{%- endfor %}
{%- endmacro %}