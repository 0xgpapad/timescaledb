 setup_kafka 
-------------
 
(1 row)

 setup_kafka 
-------------
 
(1 row)

\c meta
SELECT add_cluster_user('postgres', NULL);
 add_cluster_user 
------------------
 
(1 row)

SELECT add_node('Test1' :: NAME, 'localhost');
 add_node 
----------
 
(1 row)

SELECT add_node('test2' :: NAME, 'localhost');
 add_node 
----------
 
(1 row)

\c Test1
\dt public.*
                  List of relations
 Schema |           Name           | Type  |  Owner   
--------+--------------------------+-------+----------
 public | chunk                    | table | postgres
 public | chunk_replica_node       | table | postgres
 public | chunk_replica_node_index | table | postgres
 public | cluster_user             | table | postgres
 public | default_replica_node     | table | postgres
 public | deleted_field            | table | postgres
 public | deleted_hypertable       | table | postgres
 public | deleted_hypertable_index | table | postgres
 public | distinct_replica_node    | table | postgres
 public | field                    | table | postgres
 public | hypertable               | table | postgres
 public | hypertable_index         | table | postgres
 public | hypertable_replica       | table | postgres
 public | kafka_offset_cluster     | table | postgres
 public | kafka_offset_local       | table | postgres
 public | kafka_offset_node        | table | postgres
 public | meta                     | table | postgres
 public | node                     | table | postgres
 public | partition                | table | postgres
 public | partition_epoch          | table | postgres
 public | partition_replica        | table | postgres
(21 rows)

\det+ public.*
                                               List of foreign tables
 Schema |           Table           | Server |                       FDW Options                       | Description 
--------+---------------------------+--------+---------------------------------------------------------+-------------
 public | kafka_offset_remote_test2 | test2  | (schema_name 'public', table_name 'kafka_offset_local') | 
(1 row)

SELECT *
FROM kafka_get_start_and_next_offset('topic', 0 :: SMALLINT, 0);
 start_offset | next_offset 
--------------+-------------
            0 |           0
(1 row)

SELECT *
FROM kafka_get_start_and_next_offset('topic', 0 :: SMALLINT, 0);
 start_offset | next_offset 
--------------+-------------
            0 |           0
(1 row)

SELECT *
FROM kafka_set_next_offset('topic', 0 :: SMALLINT, 0, 100);
 kafka_set_next_offset 
-----------------------
 
(1 row)

SELECT *
FROM kafka_get_start_and_next_offset('topic', 0 :: SMALLINT, 0);
 start_offset | next_offset 
--------------+-------------
            0 |         100
(1 row)

SELECT *
FROM kafka_get_start_and_next_offset('topic', 1 :: SMALLINT, 25);
 start_offset | next_offset 
--------------+-------------
           25 |          25
(1 row)

SELECT *
FROM kafka_get_start_and_next_offset('topic2', 0 :: SMALLINT, 29);
 start_offset | next_offset 
--------------+-------------
           29 |          29
(1 row)

\c test2
SELECT *
FROM kafka_get_start_and_next_offset('topic', 0 :: SMALLINT, 0);
 start_offset | next_offset 
--------------+-------------
          100 |         100
(1 row)

\set ON_ERROR_STOP 0
SET client_min_messages TO FATAL;
SELECT *
FROM kafka_set_next_offset('topic', 0 :: SMALLINT, 0, 101);
SET client_min_messages TO NOTICE;
\set ON_ERROR_STOP 1
SELECT *
FROM kafka_set_next_offset('topic', 0 :: SMALLINT, 100, 101);
 kafka_set_next_offset 
-----------------------
 
(1 row)

\c Test1
SELECT *
FROM kafka_get_start_and_next_offset('topic', 0 :: SMALLINT, 0);
 start_offset | next_offset 
--------------+-------------
          101 |         101
(1 row)

SELECT *
FROM kafka_offset_local;
 topic  | partition_number | start_offset | next_offset | database_name 
--------+------------------+--------------+-------------+---------------
 topic  |                0 |            0 |         100 | Test1
 topic  |                1 |           25 |          25 | Test1
 topic2 |                0 |           29 |          29 | Test1
 topic  |                0 |          101 |         101 | Test1
(4 rows)

